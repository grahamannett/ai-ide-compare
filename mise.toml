[env]
    # previously needed insiders for `agent` abilities, its in the latest version now it seems though
    VSCODE_TYPE = "{{ get_env(name='USEINSIDERS', default='-insiders') }}" # if USEINSIDERS='' then doenst use insiders?
    VSCODE_CMD = "code{{ env.VSCODE_TYPE }}"

[tasks."version:cursor"]
    run = "cursor --version"

[tasks."version:windsurf"]
    run = "windsurf --version"

[tasks."version:copilot"]
    env = { VSCODE_DIR = ".vscode{{env.VSCODE_TYPE}}" }
    run = [
        # advantage of using env.VARNAME (versus $VSCODE_DIR) is that it explicity prints the var from mise run
        "echo VSCODE-FOLDER: {{env.VSCODE_DIR}}",
        "jq -r '.version' $(find ~/{{env.VSCODE_DIR}}/extensions -type d -name 'github.copilot-[0-9]*')/package.json",
    ]
[tasks."ide:cursor"]
    run = "cursor {{arg(name='file')}}"

[tasks."ide:windsurf"]
    run = "windsurf {{arg(name='file')}}"

[tasks."ide:copilot"]
    run = "$VSCODE_CMD {{arg(name='file')}}"

[tasks.eval]
    run = "uv run ai-ide-compare {{arg(name='taskdir', var=true)}}"

[tasks.taskstart]
    # TODO: move these to args, but use env.VARNAME as makes it easier to verify as they are printed out from mise
    env = { TASK_NAME = "todo-app", IDE = "cursor", LLM = "anthropic-claude3.7" }
    run = """
    OUTPUT_DIR=$(uv run python -m src.ai_ide_compare.task_init {{env.TASK_NAME}} {{env.IDE}} {{env.LLM}} --capture-output)
    echo "Created task in directory: $OUTPUT_DIR"
    # start the ide
    mise run ide:$IDE "$OUTPUT_DIR"
    """